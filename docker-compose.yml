##version: '3.8'
#
##networks:
##  backend-network:
##    external: true
#
#services:
#  mongodb:
#    image: mongo
#    ports:
#      - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
##    networks:
##      - backend-network
#
#  zookeeper:
#    image: zookeeper:3.5
#    ports:
#      - "2181:2181"
##    networks:
##      - backend-network
#
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092 #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092#
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#    depends_on:
#      - zookeeper
##    networks:
##      - backend-network
##
##  image-service:
##    build: .
##    depends_on:
##      - mongodb
##      - kafka
##    environment:
##      SPRING_DATA_MONGODB_URI: ${MONGODB_URI}
##      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
##    ports:
##      - "8081:8081"
##    networks:
##      - backend-network


version: '3.8'

networks:
  backend-network:
    external: true

services:
  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - backend-network

  zookeeper:
    image: zookeeper:3.5
    ports:
      - "2181:2181"
    networks:
      - backend-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      - zookeeper
    networks:
      - backend-network

  image-service:
    build: .
    depends_on:
      - mongodb
      - kafka
    environment:
      SPRING_DATA_MONGODB_URI: ${MONGODB_URI}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    ports:
      - "8081:8081"
    networks:
      - backend-network